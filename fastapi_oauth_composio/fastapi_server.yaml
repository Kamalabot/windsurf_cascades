components:
  schemas:
    Body_login_for_access_token_token_post:
      properties:
        client_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Secret
        grant_type:
          anyOf:
          - pattern: password
            type: string
          - type: 'null'
          title: Grant Type
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: Body_login_for_access_token_token_post
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Sale:
      properties:
        customer_name:
          title: Customer Name
          type: string
        date:
          format: date
          title: Date
          type: string
        id:
          title: Id
          type: integer
        product_name:
          title: Product Name
          type: string
        quantity:
          title: Quantity
          type: integer
        total_amount:
          title: Total Amount
          type: number
        unit_price:
          title: Unit Price
          type: number
      required:
      - date
      - product_name
      - quantity
      - unit_price
      - total_amount
      - customer_name
      - id
      title: Sale
      type: object
    SaleCreate:
      properties:
        customer_name:
          title: Customer Name
          type: string
        date:
          format: date
          title: Date
          type: string
        product_name:
          title: Product Name
          type: string
        quantity:
          title: Quantity
          type: integer
        total_amount:
          title: Total Amount
          type: number
        unit_price:
          title: Unit Price
          type: number
      required:
      - date
      - product_name
      - quantity
      - unit_price
      - total_amount
      - customer_name
      title: SaleCreate
      type: object
    Token:
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
      - access_token
      - token_type
      title: Token
      type: object
    User:
      properties:
        email:
          title: Email
          type: string
        id:
          title: Id
          type: integer
        is_active:
          title: Is Active
          type: boolean
      required:
      - email
      - id
      - is_active
      title: User
      type: object
    UserApiKey:
      properties:
        api_key:
          title: Api Key
          type: string
      required:
      - api_key
      title: UserApiKey
      type: object
    UserCreate:
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: UserCreate
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    APIKeyHeader:
      in: header
      name: X-API-Key
      type: apiKey
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: token
      type: oauth2
info:
  description: API for managing sales with OAuth2 authentication
  title: Sales API
  version: 0.1.0
openapi: 3.1.0
paths:
  /sales/:
    get:
      operationId: read_sales_sales__get
      parameters:
      - in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sale'
                title: Response Read Sales Sales  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      - OAuth2PasswordBearer: []
      summary: Read Sales
    post:
      operationId: create_sale_sales__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      - OAuth2PasswordBearer: []
      summary: Create Sale
  /sales/{sale_id}:
    get:
      operationId: read_sale_sales__sale_id__get
      parameters:
      - in: path
        name: sale_id
        required: true
        schema:
          title: Sale Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      - OAuth2PasswordBearer: []
      summary: Read Sale
  /token:
    post:
      operationId: login_for_access_token_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_for_access_token_token_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login For Access Token
  /users/:
    post:
      operationId: create_user_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create User
  /users/api-key/:
    post:
      operationId: generate_user_api_key_users_api_key__post
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiKey'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Generate User Api Key
